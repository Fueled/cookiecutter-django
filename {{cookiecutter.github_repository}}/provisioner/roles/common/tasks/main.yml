{% raw %}---

# Uncomment following if ipv6 is not available or not tunelled through ipv4 properly
# Disable ipv6 when running in VM(vagrant)
#- name: Disable ipv6 for all interfaces
#  sysctl: name="net.ipv6.conf.all.disable_ipv6" value=1 state=present
#  when: vm == 1
#
#- name: Disable ipv6 for default interface
#  sysctl: name="net.ipv6.conf.default.disable_ipv6" value=1 state=present
#  when: vm == 1
#
#- name: Disable ipv6 for local interface
#  sysctl: name="net.ipv6.conf.lo.disable_ipv6" value=1 state=present
#  when: vm == 1
- name: set hostname
  action: shell hostnamectl set-hostname {{ domain_name }}
  when: vm == 0

- name: set system locale
  command: update-locale LC_ALL={{ lc_all }} LANG={{ lc_lang }} LC_CTYPE={{ lc_ctype }} LC_COLLATE={{ lc_collate }}

- name: set locale file
  become: yes
  template: src=locale.j2 dest=/etc/default/locale

- name: set timezone
  file: src=/usr/share/zoneinfo/{{ common_timezone }}
        dest=/etc/localtime
        force=yes
        state=link

- name: add apt repository for python3.7
  apt_repository:
    repo: "ppa:deadsnakes/ppa"
    state: present
    update_cache: yes

- name: add an Apt signing key to validate packages from PostgreSQL Repo
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present

- name: add to PostgreSQL.list
  apt_repository:
    repo: deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main
    state: present
    update_cache: yes

- name: ensure a default bashrc and inputrc file
  copy: src={{ item.src }} dest=/home/{{ user }}/{{ item.dest }} owner={{ user }} group={{ user }}
  with_items:
    - { src: "bashrc", dest: ".bashrc" }
    - { src: "inputrc", dest: ".inputrc" }

- name: ensure .pip directory exists
  file:
    path: /home/{{ user }}/.pip
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: 0775

- name: ensure default pypi mirror for easy_install and virtualenv is pypi.python.org
  copy: src={{ item.src }} dest=/home/{{ user }}/{{ item.dest }} owner={{ user }} group={{ user }}
  with_items:
    - { src: "pydistutils.cfg", dest: ".pydistutils.cfg" }
    - { src: "pip.conf", dest: ".pip/pip.conf" }

- name: apt_get install common packages
  apt:
    name: {{base_ubuntu.common.apt_packages}}
    state: present
    cache_valid_time: 300

- name: ensure there is a group www-data
  group: name=www-data state=present system=yes

- name: ensure there is a user www-data
  user: name=www-data group=www-data system=yes{% endraw %}
